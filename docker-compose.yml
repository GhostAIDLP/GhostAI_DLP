# Docker Compose for GhostAI DLP SDK
# Includes the main application and supporting services

version: '3.8'

services:
  # Main GhostAI DLP application
  ghostai-dlp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-dummy-key-for-testing}
      - HF_TOKEN=${HF_TOKEN:-}
      - POSTGRES_USER=${POSTGRES_USER:-ghostai}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-ghostai123}
      - POSTGRES_DB=${POSTGRES_DB:-ghostai}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - DATABASE_URL=postgresql://ghostai:ghostai123@db:5432/ghostai
    depends_on:
      - redis
      - db
    volumes:
      - ./src:/app/src:ro
      - ./demo_rag:/app/demo_rag:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import ghostai; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and job queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # PostgreSQL database
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ghostai}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ghostai123}
      POSTGRES_DB: ${POSTGRES_DB:-ghostai}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro

  # Database admin interface
  adminer:
    image: adminer:4.8.1
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db

  # Dashboard service
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    ports:
      - "8501:8501"
    environment:
      - DATABASE_URL=postgresql://ghostai:ghostai123@db:5432/ghostai
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development service with hot reload
  ghostai-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5001:5000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-dummy-key-for-testing}
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    volumes:
      - ./src:/app/src
      - ./demo_rag:/app/demo_rag
    command: ["python", "-m", "ghostai.proxy_api.proxy"]
    depends_on:
      - redis
      - db
    profiles:
      - dev

volumes:
  pgdata:
  redis_data: