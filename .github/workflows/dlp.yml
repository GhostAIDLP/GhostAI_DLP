name: GhostAI DLP Scan

on:               # üëà this block is required
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:   # üëà optional: lets you trigger manually from Actions tab

jobs:
  dlp-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Start Flask API
        run: |
          source .venv/bin/activate
          nohup flask --app src/api/routers/risk run --port=5000 &
          sleep 5

      - name: Run DLP Scan
        run: |
          source .venv/bin/activate
          mkdir -p dlp_results
          find . -type f -name "*.py" -print0 | \
          xargs -0 -I {} sh -c '
            echo "üîç Scanning {}"
            python -m src.cli.auto_cli < "{}" > "dlp_results/$(basename {}).json" || true
          '

      - name: Upload DLP results
        uses: actions/upload-artifact@v4
        with:
          name: dlp-results
          path: dlp_results/

      - name: Install Gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks_$(uname -s)_$(uname -m).tar.gz \
          | tar -xz gitleaks

      - name: Install TruffleHog
        run: |
          curl -sSL https://github.com/trufflesecurity/trufflehog/releases/latest/download/trufflehog_$(uname -s)_$(uname -m).tar.gz \
          | tar -xz trufflehog

      - name: Run Gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks_$(uname -s)_$(uname -m).tar.gz | tar -xz gitleaks
          ./gitleaks detect --no-git -v --source . --report-format json --report-path gitleaks.json || true

      - name: Run TruffleHog
        run: |
          curl -sSL https://github.com/trufflesecurity/trufflehog/releases/latest/download/trufflehog_$(uname -s)_$(uname -m).tar.gz | tar -xz trufflehog
          ./trufflehog filesystem --no-update --json . > trufflehog.json || true

      - name: Normalize comparator reports
        run: |
          source .venv/bin/activate
          python src/normalize_reports.py --gitleaks gitleaks.json --trufflehog trufflehog.json --out dlp_results

      - name: Ingest results into DB
        if: always()
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          source .venv/bin/activate
          python src/upload_results.py --repo "$GITHUB_REPOSITORY"
